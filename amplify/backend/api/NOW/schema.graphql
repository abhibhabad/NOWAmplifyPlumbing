type UserTable @model @auth(rules: [{allow: private, provider: userPools}]) {
  id: ID!
  userId: String
  firstName: String
  lastName: String
  imageKey: String
  userEmail: String
  userPhoneNumber: String
  venueNotifications: Boolean
  promotionNotifications: Boolean
  emailNotifications: Boolean
}

enum PassStatus {
  PURCHASED
  REDEEMED
  EXPIRED
}

type PassesTable @model @auth(rules: [{allow: private, provider: userPools}]) {
  id: ID!
  passStatus: PassStatus!
  userID: ID
  purchasedAt: AWSDateTime
  transactionID: String
  listingtableID: ID! @index(name: "byListingTable")
  venuesID: ID! @index(name: "byVenues")
}

enum ListingType {
  COVER
  EVENT
  LINESKIP
}

type ListingTable @model @auth(rules: [{allow: private, provider: userPools}]) {
  id: ID!
  listingName: String!
  listingType: ListingType!
  listingStart: AWSDateTime!
  listingEnd: AWSDateTime!
  totalPasses: Int!
  passesSold: Int!
  instructions: String!
  description: String!
  createdAt: AWSDateTime!
  createdBy: ID!
  PassesTables: [PassesTable] @hasMany(indexName: "byListingTable", fields: ["id"])
  venuesID: ID! @index(name: "byVenues")
  venueName: String!
  isActive: Boolean!
  listingPrice: Float!
  deletedAt: AWSDateTime
  isExpired: Boolean!
}

type Venues @model @auth(rules: [{allow: private, provider: userPools}]) {
  id: ID!
  venueName: String!
  venuePhoneNumber: String!
  venueEmail: String!
  venueImageKey: String!
  venueHours: [AWSTime!]
  accountName: String!
  EIN: Int!
  accountNumber: Int!
  routingNumber: Int!
  ownerFirstName: String!
  ownerLastName: String!
  ownerEmail: String!
  ListingTables: [ListingTable] @hasMany(indexName: "byVenues", fields: ["id"])
  ownerPhoneNumber: String!
  createdBy: ID!
  revenueSplit: Float!
  daysOfOperation: [Boolean!]!
  PassesTables: [PassesTable] @hasMany(indexName: "byVenues", fields: ["id"])
}
